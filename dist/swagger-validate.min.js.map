{"version":3,"sources":["/home/michael/src/github/forks/swagger-validate/node_modules/boilerplate-gulp/node_modules/browserify/node_modules/browser-pack/_prelude.js","/home/michael/src/github/forks/swagger-validate/src/errorTypes.js","/home/michael/src/github/forks/swagger-validate/src/index.js","/home/michael/src/github/forks/swagger-validate/src/validateArray.js","/home/michael/src/github/forks/swagger-validate/src/validateDataType.js","/home/michael/src/github/forks/swagger-validate/src/validateModel.js","/home/michael/src/github/forks/swagger-validate/src/validateOperation.js","/home/michael/src/github/forks/swagger-validate/src/validatePrimitiveTypes.js"],"names":[],"mappings":"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","file":"swagger-validate.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nfunction DataTypeValidationError(message){\n  this.name = 'DataTypeValidationError';\n  this.message = message || 'Invalid data type';\n}\nDataTypeValidationError.prototype = Object.create(Error.prototype);\nDataTypeValidationError.prototype.constructor = DataTypeValidationError;\nexports.DataTypeValidationError = DataTypeValidationError;\n\nfunction NotAnIntegerError(value){\n  this.name = 'NotAnIntegerError';\n  this.message = '\"' + value + '\" is not an integer';\n  this.value = value;\n}\nNotAnIntegerError.prototype = Object.create(DataTypeValidationError.prototype);\nNotAnIntegerError.prototype.constructor = NotAnIntegerError;\nexports.NotAnIntegerError = NotAnIntegerError;\n\nfunction NotANumberError(value, actualType){\n  this.name = 'NotANumberError';\n  this.message = '\"' + value + '\" is not a number';\n  if(actualType) this.message += ' (got a ' + actualType + ' instead)';\n\n  this.value = value;\n}\nNotANumberError.prototype = Object.create(DataTypeValidationError.prototype);\nNotANumberError.prototype.constructor = NotANumberError;\nexports.NotANumberError = NotANumberError;\n\nfunction NumberTooLargeError(value, max){\n  this.name = 'NumberTooLargeError';\n  this.message = '\"' + value + '\" is above the maximum of ' + max.toString();\n  this.value = value;\n}\nNumberTooLargeError.prototype = Object.create(DataTypeValidationError.prototype);\nNumberTooLargeError.prototype.constructor = NumberTooLargeError;\nexports.NumberTooLargeError = NumberTooLargeError;\n\nfunction NumberTooSmallError(value, max){\n  this.name = 'NumberTooSmallError';\n  this.message = '\"' + value + '\" is above the maximum of ' + max.toString();\n  this.value = value;\n}\nNumberTooSmallError.prototype = Object.create(DataTypeValidationError.prototype);\nNumberTooSmallError.prototype.constructor = NumberTooSmallError;\nexports.NumberTooSmallError = NumberTooSmallError;\n\nfunction NotABooleanError(value, actualType){\n  this.name = 'NotABooleanError';\n  this.message = '\"' + value + '\" is not a boolean';\n  if(actualType) this.message += ' (got a ' + actualType + ' instead)';\n\n  this.value = value;\n}\nNotABooleanError.prototype = Object.create(DataTypeValidationError.prototype);\nNotABooleanError.prototype.constructor = NotABooleanError;\nexports.NotABooleanError = NotABooleanError;\n\nfunction NotAnArrayError(value, actualType){\n  this.name = 'NotAnArrayError';\n  this.message = '\"' + value + '\" is not an array';\n  if(actualType) this.message += ' (got a ' + actualType + ' instead)';\n\n  this.value = value;\n}\nNotAnArrayError.prototype = Object.create(DataTypeValidationError.prototype);\nNotAnArrayError.prototype.constructor = NotAnArrayError;\nexports.NotAnArrayError = NotAnArrayError;\n\nfunction DuplicateInSetError(arr, dupes){\n  this.name = 'DuplicateInSetError';\n  this.message = 'Duplicates (\"' + dupes.join('\", \"') + '\") found in set: [\"' + arr.join('\", \"') + '\"';\n  this.dupes = dupes;\n  this.value = arr;\n}\nDuplicateInSetError.prototype = Object.create(DataTypeValidationError.prototype);\nDuplicateInSetError.prototype.constructor = DuplicateInSetError;\nexports.DuplicateInSetError = DuplicateInSetError;\n\nfunction NotVoidError(value, actualType){\n  this.name = 'NotVoidError';\n  this.message = '\"' + value + '\" is not null or undefined';\n  if(actualType) this.message += ' (got a ' + actualType + ' instead)';\n\n  this.value = value;\n}\nNotVoidError.prototype = Object.create(DataTypeValidationError.prototype);\nNotVoidError.prototype.constructor = NotVoidError;\nexports.NotVoidError = NotVoidError;\n\nfunction NotAStringError(value, actualType){\n  this.name = 'NotAStringError';\n  this.message = '\"' + value + '\" is not a string';\n  if(actualType) this.message += ' (got a ' + actualType + ' instead)';\n\n  this.value = value;\n}\nNotAStringError.prototype = Object.create(DataTypeValidationError.prototype);\nNotAStringError.prototype.constructor = NotAStringError;\nexports.NotAStringError = NotAStringError;\n\nfunction StringNotInEnumError(value, acceptableValues){\n  this.name = 'StringNotInEnumError';\n  this.message = '\"' + value + '\" is not an acceptable value: \"' + acceptableValues.join('\", \"') + '\"';\n \n  this.value = value;\n}\nStringNotInEnumError.prototype = Object.create(DataTypeValidationError.prototype);\nStringNotInEnumError.prototype.constructor = StringNotInEnumError;\nexports.StringNotInEnumError = StringNotInEnumError;\n\n\nfunction ErrorsInArrayElementsError(errors){\n  this.name = 'ErrorsInArrayElementsError';\n  this.message = 'Errors in array elements:\\n\\t' + errors.join(',\\n\\t');\n  this.errors = errors;\n}\nErrorsInArrayElementsError.prototype = Object.create(DataTypeValidationError.prototype);\nErrorsInArrayElementsError.prototype.constructor = ErrorsInArrayElementsError;\nexports.ErrorsInArrayElementsError = ErrorsInArrayElementsError;\n\nfunction MissingValueError(){\n  this.name = 'MissingValueError';\n  \n  this.message = 'This value is required but missing';\n}\nMissingValueError.prototype = Object.create(DataTypeValidationError.prototype);\nMissingValueError.prototype.constructor = MissingValueError;\nexports.MissingValueError = MissingValueError;\n\nfunction ValidationError(specName, spec, error){\n  this.name = 'ValidationError';\n  this.specName = specName;\n  this.spec = spec;\n  this.error = error;\n\n  this.message = specName + ' is invalid: ' + error.message;\n}\nValidationError.prototype = Object.create(DataTypeValidationError.prototype);\nValidationError.prototype.constructor = ValidationError;\nexports.ValidationError = ValidationError;\n\nfunction ValidationErrors(value, specName, spec, errors){\n  this.name = 'ValidationErrors';\n\n  this.value = value;\n  this.specName = specName;\n  this.spec = spec;\n  this.errors = errors || [];\n\n  this.message = specName + ' is invalid';\n\n  if(this.errors.length){\n    this.message += ':\\n\\t' + this.errors.map(function(e){ return e.message; }).join('\\n\\t');\n  }\n}\nValidationErrors.prototype = Object.create(DataTypeValidationError.prototype);\nValidationErrors.prototype.constructor = ValidationErrors;\nexports.ValidationErrors = ValidationErrors;\n","exports.dataType = require('./validateDataType');\nexports.model = require('./validateModel');\nexports.operation = require('./validateOperation');\nexports.array = require('./validateArray');\nexports.errors = require('./errorTypes');\n\nvar primitives = require('./validatePrimitiveTypes');\nexports.primitive = {\n  integer: primitives.validateInteger,\n  number: primitives.validateNumber,\n  date: primitives.validateDate,\n  string: primitives.validateString,\n  boolean: primitives.validateBoolean,\n  void: primitives.validateVoid,\n  file: primitives.validateFile\n};\n","'use strict';\n\nvar errorTypes = require('./errorTypes'),\n  validate = require('./index');\n\nfunction validateArray(candidate, dataType, models){\n  if(!Array.isArray(candidate)){\n    return new errorTypes.NotAnArrayError(candidate, typeof candidate);\n  }\n\n  var items = dataType.items;\n\n  if(dataType.uniqueItems){\n    var dupeCheck = [];\n    var dupes = candidate.filter(function(value){\n      var signature;\n      if(items.$ref){\n        signature = JSON.stringify(value);\n      } else {\n        signature = value;\n      }\n      if(dupeCheck.indexOf(signature) !== -1){\n        return true;\n      } else {\n        dupeCheck.push(signature);\n        return false;\n      }\n    });\n\n    if(dupes.length) {\n      return new errorTypes.DuplicateInSetError(candidate, dupes);\n    }\n  }\n\n  var errors;\n\n  if(items.$ref){\n    var model = models[items.$ref];\n    errors = candidate.filter(function(value){\n      return validate.model(value, model, models);\n    });\n  } else {\n    errors = candidate.filter(function(value){\n      return validate.dataType(value, items, models);\n    });\n  }\n\n  if(errors.length){\n    return new errorTypes.ErrorsInArrayElementsError(errors);\n  }\n}\nmodule.exports = validateArray;","'use strict';\n\nvar validate = require('./index');\n\nfunction validateDataType(candidate, dataType, models){\n  models = models || {};\n\n  var type = dataType.type || dataType.dataType || dataType.$ref;\n\n  switch(type){\n    case 'integer':\n      return validate.primitive.integer(candidate, dataType);\n    case 'number':\n      return validate.primitive.number(candidate, dataType);\n    case 'string':\n      return validate.primitive.string(candidate, dataType);\n    case 'boolean':\n      return validate.primitive.boolean(candidate);\n    case 'array':\n      return validate.array(candidate, dataType, models);\n    case 'void':\n      return validate.primitive.void(candidate);\n    case 'File':\n      return validate.primitive.file();\n    case 'date':\n      return validate.primitive.date(candidate, dataType);\n    default:\n      // Assumed to be complex model\n      var model = models[type];\n      return validate.model(candidate, model, models);\n  }\n}\nmodule.exports = validateDataType;\n","'use strict';\n\nvar errorTypes = require('./errorTypes'),\n  ValidationError = errorTypes.ValidationError,\n  ValidationErrors = errorTypes.ValidationErrors,\n  MissingValueError = errorTypes.MissingValueError,\n  validate = require('./index');\n\n// http://stackoverflow.com/questions/122102/what-is-the-most-efficient-way-to-clone-an-object\nfunction clone(obj){\n    if(obj === null || obj === undefined || typeof obj !== 'object') return obj;\n\n    if(Array.isArray(obj)) return obj.slice();\n\n    var temp = {};\n\n    for(var key in obj)\n        temp[key] = clone(obj[key]);\n    return temp;\n}\n\nfunction addInhertiedProperties(model, modelId, models){\n  var parent;\n\n  Object.keys(models).some(function(modelName){\n    var potentialParent = models[modelName];\n    if (!potentialParent.subTypes) return;\n\n    if(potentialParent.subTypes.indexOf(modelId) !== -1){\n      parent = potentialParent;\n      return true;\n    }\n  });\n\n  if(!parent) return;\n\n  for(var propertyName in parent.properties){\n    model.properties[propertyName] = parent.properties[propertyName];\n  }\n  \n  if(parent.required) model.required = model.required.concat(parent.required);\n\n  addInhertiedProperties(model, parent.id, models);\n}\n\nfunction validateModel(candidate, model, models){\n  if(candidate === null || typeof candidate !== 'object'){\n    return new ValidationErrors(candidate, model);\n  }\n\n  models = models || {};\n\n  model = clone(model);\n  if(!model.required) model.required = [];\n  addInhertiedProperties(model, model.id, models);\n\n  var errors = [];\n\n  model.required.forEach(function(propertyName){\n    if (candidate[propertyName] !== undefined) return;\n\n    var property = model.properties[propertyName];\n    var error = new MissingValueError();\n    errors.push(new ValidationError(propertyName, property, error));\n  });\n\n  Object.keys(candidate).forEach(function(propertyName){\n    var property = model.properties[propertyName];\n    \n    if(property === undefined) return;\n\n    var error = validate.dataType(candidate[propertyName], property, models);\n    if(error){\n      errors.push(new ValidationError(propertyName, property, error));\n    }\n  });\n  \n  if(errors.length){\n    return new ValidationErrors(candidate, model.id, model, errors);\n  }\n}\nmodule.exports = validateModel;","'use strict';\n\nvar errorTypes = require('./errorTypes'),\n  ValidationError = errorTypes.ValidationError,\n  ValidationErrors = errorTypes.ValidationErrors,\n  MissingValueError = errorTypes.MissingValueError,\n  validate = require('./index');\n\nfunction validateOperation(candidate, operation, models){\n  var errors = [];\n\n  var presentParams = (operation.parameters || []).filter(function(param){\n    if (candidate[param.name] !== undefined) return true;\n\n    if (param.required) {\n      var error = new MissingValueError();\n      errors.push(new ValidationError(param.name, param, error));\n    }\n\n    return false;\n  });\n\n  presentParams.forEach(function(param){\n    var error = validate.dataType(candidate[param.name], param, models);\n    if(error){\n      errors.push(new ValidationError(param.name, param, error));\n    }\n  });\n\n  if(errors.length){\n    return new ValidationErrors(candidate, operation.nickname, operation, errors);\n  }\n}\nmodule.exports = validateOperation;\n","'use strict';\n\nvar errorTypes = require('./errorTypes');\n\nfunction validateDate(candidate) {\n  var date = new Date(candidate);\n\n  if(!(date instanceof Date)) {\n    return new errorTypes.DataTypeValidationError(candidate);\n  }\n}\nexports.validateDate = validateDate;\n\nfunction validateInteger(candidate, dataType){\n  var error = validateNumber(candidate, dataType);\n  if(error) return error;\n\n  if(candidate % 1){\n    return new errorTypes.NotAnIntegerError(candidate);\n  }\n}\nexports.validateInteger = validateInteger;\n\nfunction validateNumber(candidate, dataType){\n  if(!(typeof candidate === 'number' || candidate instanceof Number) || isNaN(candidate)){\n    return new errorTypes.NotANumberError(candidate, typeof candidate);\n  }\n\n  if((dataType.minimum !== undefined) && candidate < parseInt(dataType.minimum, 10)){\n    return new errorTypes.NumberTooSmallError(candidate, dataType.minimum);\n  }\n\n  if((dataType.maximum !== undefined) && candidate > parseInt(dataType.maximum, 10)){\n    return new errorTypes.NumberTooLargeError(candidate, dataType.maximum);\n  }\n}\nexports.validateNumber = validateNumber;\n\nfunction validateBoolean(candidate){\n  if(!(typeof candidate === 'boolean' || candidate instanceof Boolean)){\n    return new errorTypes.NotABooleanError(candidate, typeof candidate);\n  }\n}\nexports.validateBoolean = validateBoolean;\n\n\nfunction validateVoid(candidate){\n  if(candidate != null){\n    return new errorTypes.NotVoidError(candidate, typeof candidate);\n  }\n}\nexports.validateVoid = validateVoid;\n\nfunction validateFile(){\n  // Not sure how to check this, since anything could qualify as 'File'.\n}\nexports.validateFile = validateFile;\n\nfunction validateString(candidate, dataType){\n  if(typeof candidate !== 'string' && !(candidate instanceof String)){\n    return new errorTypes.NotAStringError(candidate, typeof candidate);\n  }\n\n  if('enum' in dataType){\n    if(dataType.enum.indexOf(candidate) === -1) {\n      return new errorTypes.StringNotInEnumError(candidate, dataType.enum);\n    }\n  }\n}\nexports.validateString = validateString;\n"],"sourceRoot":"/source/"}